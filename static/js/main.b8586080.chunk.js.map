{"version":3,"sources":["i18n.js","component/Button.tsx","redux/reducers/actions.tsx","styling/colours.tsx","component/Algorithms.tsx","component/Footer.tsx","component/BarGraph.tsx","api/factApi.ts","page/MainPage.tsx","App.tsx","redux/reducers/reducers.tsx","redux/reducers/store.tsx","index.tsx"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","react","useSuspense","CustomButton","_ref","id","_ref$disabled","disabled","onClick","sx","children","_jsx","Button","_objectSpread","my","color","display","generateNumbersAction","arraySize","type","payload","sortInProgressAction","sortedAction","sorted","iterationsCompletedAction","clean","sortNumbersBubbleAction","newArray","sortNumbersInsertionAction","colours","primary","secondary","success","accent","error","BubbleSort","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","signal","dispatch","len","i","_loop","j","_ret","sortedArray","wrap","_context2","prev","next","_toConsumableArray","length","unsortedArray","swap","_sortedArray","_context","aborted","map","item","abrupt","v","timer","value","index","stop","delegateYield","t0","_x","_x2","_x3","apply","arguments","InsertionSort","_ref2","_callee2","array","_loop2","_ret2","_context4","current","_sortedArray2","_context3","_x4","_x5","_x6","_x7","_timer","_callee3","ms","_context5","Promise","resolve","setTimeout","Footer","email","style","padding","textAlign","marginTop","position","bottom","width","_jsxs","href","target","rel","concat","Chart","register","BarController","BarElement","CategoryScale","LinearScale","Title","Tooltip","BarGraph","sortingInProgressState","GenerateDataGraph","arrayX","arrayY","push","x","y","GenerateDataColourGraph","data","labels","datasets","label","backgroundColor","Array","fill","Bar","options","plugins","legend","scales","grid","fetchData","_fetchData","limit","response","axios","get","headers","params","sent","console","log","theme","createTheme","palette","main","text","Dashboard","_useTranslation","useTranslation","t","useDispatch","_useSelector","useSelector","state","_useState","useState","_useState2","_slicedToArray","running","setRunning","_useState3","_useState4","languageValue","setLanguageValue","_useState5","_useState6","factData","setFactData","_React$useState","React","_React$useState2","setArraySize","sortInProgess","iterationsCompletedState","iterationsCompleted","stopControllerRef","useRef","bubbleSort","AbortController","callFacts","insertionSort","_ref3","useEffect","flexDirection","minHeight","ThemeProvider","AppBar","maxHeight","Container","maxWidth","Toolbar","disableGutters","Typography","mr","xs","md","fontSize","Box","Slider","min","step","max","onChange","event","valueLabelDisplay","flexGrow","_stopControllerRef$cu","abort","marginRight","alignItems","borderRadius","Paper","elevation","marginLeft","FormControlLabel","control","Switch","checked","changeLanguage","labelPlacement","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","LinearProgress","TableContainer","Table","TableBody","fact","TableRow","TableCell","App","I18nextProvider","className","initialState","displayComplete","algoStop","generatedNumbers","rootReducer","undefined","action","counter","randomNumber","parseFloat","Math","random","toFixed","arrayBubble","arrayInsertion","store","configureStore","reducer","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"kMASAA,IAIKC,IAAIC,KAGJD,IAAIE,KAEJF,IAAIG,KAGJC,KAAK,CACFC,YAAa,KACbC,OAAO,EAEPC,cAAe,CACXC,aAAa,GAEjBC,MAAO,CACHC,aAAa,KAIVX,QAAI,E,+MCAJY,EAvBmC,SAAHC,GAMxC,IALHC,EAAED,EAAFC,GAAEC,EAAAF,EACFG,gBAAQ,IAAAD,GAAQA,EAChBE,EAAOJ,EAAPI,QACAC,EAAEL,EAAFK,GACAC,EAAQN,EAARM,SAEA,OACIC,cAACC,IAAM,CACHP,GAAIA,EACJE,SAAUA,EACVE,GAAEI,YAAA,CACEC,GAAI,EACJC,MAAO,QACPC,QAAS,SACNP,GAEPD,QAASA,EAAQE,SAEhBA,GAGb,EChCaO,EAAwB,SAACC,GAElC,MAAO,CACHC,KAAM,mBACNC,QAASF,EAEjB,EACaG,EAAuB,WAEhC,MAAO,CACHF,KAAM,mBAEd,EACaG,EAAe,SAACC,GAEzB,MAAO,CACHJ,KAAM,SACNC,QAASG,EAEjB,EAcaC,EAA4B,SAACC,GACtC,MAAO,CACHN,KAAM,uBACNC,QAAS,CAAEK,MAAOA,GAE1B,EACaC,EAA0B,SAACC,GAGpC,MAAO,CACHR,KAAM,sBACNC,QAASO,EAEjB,EACaC,EAA6B,SAACD,GAGvC,MAAO,CACHR,KAAM,yBACNC,QAASO,EAEjB,E,QCtDaE,EAAU,CACnBC,QAAS,UACTC,UAAW,UACXC,QAAS,UACTC,OAAQ,UACRC,MAAO,WCKEC,EAAU,eAAA/B,EAAAgC,YAAAC,cAAAC,MAAG,SAAAC,EACtBC,EACAC,EACAC,GAAa,IAAAf,EAAAgB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAX,cAAAY,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGPzB,EAAQ0B,YAAOb,GACfG,EAAMhB,EAAS2B,OAEZV,EAAI,EAAE,KAAD,OAAEA,EAAID,GAAG,CAAAO,EAAAE,KAAA,SAAAP,EAAAR,cAAAC,MAAA,SAAAO,EAAAC,GAAA,IAAAS,EAAAC,EAAAC,EAAC,OAADpB,cAAAY,MAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,WAGXX,EAAOkB,QAAQ,CAADD,EAAAN,KAAA,QAKmC,OAH3CG,EAAgB5B,EAASiC,KAAI,SAACC,GAChC,OAAAhD,wBAAA,GAAYgD,GAAI,IAAE9C,MAAOc,EAAQI,QACrC,IACAS,EAAShB,EAAwB6B,IAAgBG,EAAAI,OAAA,UAAAC,OAAA,kBAAAL,EAAAN,KAAA,EAI/CY,EAAM,IAAOrB,GAAK,KAAD,EACnBhB,EAASmB,GAAGmB,MAAQtC,EAASmB,EAAI,GAAGmB,QAChCT,EAAO7B,EAASmB,GACpBnB,EAASmB,GAAKnB,EAASmB,EAAI,GAC3BnB,EAASmB,EAAI,GAAKU,EAGZR,EAAcrB,EAASiC,KAAI,SAACC,EAAMK,GACpC,OAAIA,IAAUpB,GAAKoB,IAAUpB,EAAI,EAEV,YAAfe,EAAK9C,MACLF,wBAAA,GAAYgD,GAAI,IAAE9C,MAAOc,EAAQI,SAEjCpB,wBAAA,GAAYgD,GAAI,IAAE9C,MAAOc,EAAQK,QAGlC2B,CACX,IAEAnB,EAAShB,EAAwBsB,IACjCN,EAASlB,GAA0B,KACtC,wBAAAkC,EAAAS,OAAA,GAAAtB,EAAA,IAhCIC,EAAI,EAAE,KAAD,OAAEA,EAAIH,EAAM,GAAC,CAAAO,EAAAE,KAAA,gBAAAF,EAAAkB,cAAAvB,EAAAC,GAAA,eAAC,GAAD,kBAAAC,EAAAG,EAAAmB,IAAA,CAAAnB,EAAAE,KAAA,gBAAAF,EAAAY,OAAA,SAAAf,EAAAgB,GAAA,QAAEjB,IAAGI,EAAAE,KAAA,gBADXR,IAAGM,EAAAE,KAAA,gBAqCtBJ,EAAcrB,EAASiC,KAAI,SAACC,GAC9B,OAAAhD,wBAAA,GAAYgD,GAAI,IAAE9C,MAAOc,EAAQG,SACrC,IAEAU,EAAShB,EAAwBsB,IAEjCN,EAASrB,KACTqB,EAASpB,GAAa,IACtB,yBAAA4B,EAAAiB,OAAA,GAAA5B,EAAA,KACH,gBAvDsB+B,EAAAC,EAAAC,GAAA,OAAApE,EAAAqE,MAAA,KAAAC,UAAA,KAyDVC,EAAa,eAAAC,EAAAxC,YAAAC,cAAAC,MAAG,SAAAuC,EACzBC,EACArC,EACAC,GAAa,IAAAf,EAAAgB,EAAAoC,EAAAnC,EAAAoC,EAAAhC,EAAA,OAAAX,cAAAY,MAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAEPzB,EAAQ0B,YAAOyB,GACfnC,EAAMhB,EAAS2B,OAAMyB,EAAA1C,cAAAC,MAAA,SAAAyC,IAAA,IAAAG,EAAApC,EAAAS,EAAA4B,EAAAnC,EAAC,OAADX,cAAAY,MAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,OAGnB8B,EAAUvD,EAASiB,GACnBE,EAAIF,EAAI,EAAE,KAAD,OAENE,GAAK,GAAKnB,EAASmB,GAAGmB,MAAQiB,EAAQjB,OAAK,CAAAmB,EAAAhC,KAAA,aAC1CX,EAAOkB,QAAQ,CAADyB,EAAAhC,KAAA,QAKsC,OAH9CG,EAAgB5B,EAASiC,KAAI,SAACC,GAChC,OAAAhD,wBAAA,GAAYgD,GAAI,IAAE9C,MAAOc,EAAQI,QACrC,IACAS,EAASd,EAA2B2B,IAAgB6B,EAAAtB,OAAA,UAAAC,OAAA,WAiBb,OAd3CpC,EAASmB,EAAI,GAAKnB,EAASmB,GAGrBE,EAAcrB,EAASiC,KAAI,SAACC,EAAMK,GACpC,OAAIA,IAAUpB,GAAKoB,IAAUpB,EAAI,EACV,YAAfe,EAAK9C,MACLF,wBAAA,GAAYgD,GAAI,IAAE9C,MAAOc,EAAQI,SAEjCpB,wBAAA,GAAYgD,GAAI,IAAE9C,MAAOc,EAAQK,QAGlC2B,CACX,IACAnB,EAASd,EAA2BoB,IACpCN,EAASlB,GAA0B,IAAQ4D,EAAAhC,KAAA,GACrCY,EAAM,IAAOrB,GAAK,KAAD,GACvBG,IAAIsC,EAAAhC,KAAA,gBAGRzB,EAASmB,EAAI,GAAKoC,EAGZlC,EAAcrB,EAASiC,KAAI,SAACC,EAAMK,GACpC,OAAIA,IAAUpB,EAAI,EACdjC,wBAAA,GAAYgD,GAAI,IAAE9C,MAAOc,EAAQK,QAE9B2B,CACX,IAEAnB,EAASd,EAA2BoB,IAEpC,yBAAAoC,EAAAjB,OAAA,GAAAY,EAAA,IA5CKnC,EAAI,EAAE,KAAD,OAAEA,EAAID,GAAG,CAAAsC,EAAA7B,KAAA,gBAAA6B,EAAAb,cAAAW,IAAA,eAAC,GAAD,kBAAAC,EAAAC,EAAAZ,IAAA,CAAAY,EAAA7B,KAAA,eAAA6B,EAAAnB,OAAA,SAAAkB,EAAAjB,GAAA,OAAEnB,IAAGqC,EAAA7B,KAAA,gBAgDtBJ,EAAcrB,EAASiC,KAAI,SAACC,GAC9B,OAAAhD,wBAAA,GAAYgD,GAAI,IAAE9C,MAAOc,EAAQG,SACrC,IAEAU,EAASd,EAA2BoB,IACpCN,EAASrB,KACTqB,EAASpB,GAAa,IACtB,yBAAA2D,EAAAd,OAAA,GAAAU,EAAA,KACH,gBAhEyBQ,EAAAC,EAAAC,GAAA,OAAAX,EAAAH,MAAA,KAAAC,UAAA,KAkE1B,SACeV,EAAKwB,GAAA,OAAAC,EAAAhB,MAAC,KAADC,UAAA,UAAAe,IAEnB,OAFmBA,EAAArD,YAAAC,cAAAC,MAApB,SAAAoD,EAAqBC,GAAU,OAAAtD,cAAAY,MAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAA9B,OAAA,SACpB,IAAI+B,SAAQ,SAACC,GAAO,OAAKC,WAAWD,EAASH,EAAG,KAAC,wBAAAC,EAAAzB,OAAA,GAAAuB,EAAA,MAC3DjB,MAAA,KAAAC,UAAA,C,aCzGcsB,EA7BA,WACX,IACMC,EAAQ,mCAGd,OACItF,cAAA,UACIuF,MAAO,CAEHC,QAAS,OACTC,UAAW,SACXC,UAAW,OACXC,SAAU,QACVC,OAAQ,IACRC,MAAO,QACT9F,SAEF+F,eAAA,KAAA/F,SAAA,CACIC,cAAA,KAAG+F,KAfC,2BAecC,OAAO,SAASC,IAAI,sBAAqBlG,SAAC,iBAG5DC,cAAA,SAAM,cACKA,cAAA,KAAG+F,KAAI,UAAAG,OAAYZ,GAAQvF,SAAEuF,IACxCtF,cAAA,aAIhB,E,iBChBAmG,IAAMC,SACFC,IACAC,IACAC,IACAC,IACAC,IACAC,KASJ,IA+EeC,GA/E2B,SAAHlH,GAIhC,IAHHoC,EAAMpC,EAANoC,OACA+E,EAAsBnH,EAAtBmH,uBACAhG,EAAMnB,EAANmB,OAEAuF,IAAMC,SACFC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGJ,IAAMG,EAAoB,SACtBC,EACAC,GAGA,IADA,IAAIlF,EAAqC,GAChCI,EAAI,EAAGA,EAAI8E,EAAQ9E,IACxBJ,EAAOmF,KAAK,CAAEC,EAAGhF,EAAGiF,EAAGJ,EAAO7E,GAAGqB,QAErC,OAAOzB,CACX,EAEMsF,EAA0B,SAC5BL,EACAC,GAGA,IADA,IAAIlF,EAAmB,GACdI,EAAI,EAAGA,EAAI8E,EAAQ9E,IACxBJ,EAAOmF,KAAKF,EAAO7E,GAAG7B,OAE1B,OAAOyB,CACX,EAEMuF,EAAO,CACTC,OAAQR,EAAkBhF,EAAQA,EAAOc,QAAQM,KAAI,SAACC,GAAI,OAAKA,EAAK+D,CAAC,IACrEK,SAAU,CACN,CACIC,MAAO,UACPH,KAAMP,EAAkBhF,EAAQA,EAAOc,QACvC6E,gBAAiBZ,EACXO,EAAwBtF,EAAQA,EAAOc,QACvC/B,EACAuG,EAAwBtF,EAAQA,EAAOc,QAAQM,KAC3C,SAAC7C,GAAK,OACFA,IAAUc,EAAQK,MACZL,EAAQK,MACRL,EAAQG,OAAO,IAE7BoG,MAAM5F,EAAOc,QAAQ+E,KAAKxG,EAAQI,WAyBpD,OAAOtB,cAAC2H,IAAG,CAACC,QApBI,CACZC,QAAS,CACLC,OAAQ,CACJzH,SAAS,IAGjB0H,OAAQ,CACJd,EAAG,CACCe,KAAM,CACF3H,SAAS,IAGjB6G,EAAG,CACCc,KAAM,CACF3H,SAAS,MAMK+G,KAAMA,GACxC,E,oBCvGO,SAAea,GAAStE,GAAA,OAAAuE,GAAApE,MAAC,KAADC,UAAA,CAoB9B,SAAAmE,KAAA,OAAAA,GAAAzG,YAAAC,cAAAC,MApBM,SAAAC,EAAyBuG,GAAa,IAAAC,EAAA,OAAA1G,cAAAY,MAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,cAAAM,EAAAP,KAAA,EAAAO,EAAAN,KAAA,EAEd4F,KAAMC,IACzB,sCACA,CACIC,QAAS,CACL,YAAa,4CAEjBC,OAAQ,CACJL,MAAOA,KAGjB,KAAD,EACsD,OAXjDC,EAAQrF,EAAA0F,KAWdC,QAAQC,IAAI,0BAA4BP,EAAShB,MAAMrE,EAAAI,OAAA,SAEhDiF,EAAShB,MAAI,OAEoB,MAFpBrE,EAAAP,KAAA,EAAAO,EAAAW,GAAAX,EAAA,SAEpB2F,QAAQnH,MAAM,kBAAiBwB,EAAAW,IAASX,EAAAW,GAAA,yBAAAX,EAAAS,OAAA,GAAA5B,EAAA,mBAG/CkC,MAAA,KAAAC,UAAA,CCgBD,IAAM6E,GAAQC,YAAY,CACtBC,QAAS,CACL3H,QAAS,CACL4H,KAAM7H,EAAQC,SAElBC,UAAW,CACP2H,KAAM7H,EAAQE,WAElB4H,KAAM,CACF7H,QAASD,EAAQI,OACjBF,UAAWF,EAAQC,YAOhB,SAAS8H,KACpB,IAAAC,EAAoBC,cAAZC,EAACF,EAADE,EAAGxK,EAAIsK,EAAJtK,KACLmD,EAAWsH,cACjBC,EAA2BC,aAAY,SAACC,GAAU,OAAKA,CAAK,IAApD3H,EAAMyH,EAANzH,OAAQjB,EAAM0I,EAAN1I,OAChB6I,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAA0CL,oBAAS,GAAKM,EAAAJ,YAAAG,EAAA,GAAjDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,EAAgCT,mBAAiB,IAAGU,EAAAR,YAAAO,EAAA,GAA7CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAE5BG,EAAkCC,IAAMd,SAAiB,IAAGe,EAAAb,YAAAW,EAAA,GAArDhK,GAASkK,EAAA,GAAEC,GAAYD,EAAA,GACxB7D,GAAyB2C,aAC3B,SAACC,GAAU,OAAKA,EAAMmB,aAAa,IAEjCC,GAA2BrB,aAC7B,SAACC,GAAU,OAAKA,EAAMqB,mBAAmB,IAEvCC,GAAoBC,iBAA+B,MACnDlE,GAAoB,SACtBC,EACAC,GAGA,IADA,IAAIlF,EAAqC,GAChCI,EAAI,EAAGA,EAAI8E,EAAQ9E,IACxBJ,EAAOmF,KAAK,CAAEC,EAAGhF,EAAGiF,EAAGJ,EAAO7E,GAAGqB,QAErC,OAAOzB,CACX,EAQMmJ,GAAU,eAAAvL,EAAAgC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,OAAAF,cAAAY,MAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,OAOkB,OANjCqH,GAAW,GACXgB,GAAkBvG,QAAU,IAAI0G,gBAGhCC,KACAnJ,EAASlB,GAA0B,IACnCkB,EAASrB,KAAwBqC,EAAAN,KAAA,EAC3BjB,EAAWK,EAAQiJ,GAAkBvG,QAAQzC,OAAQC,GAAU,KAAD,mBAAAgB,EAAAS,OAAA,GAAA5B,EAAA,KACvE,kBATe,OAAAnC,EAAAqE,MAAA,KAAAC,UAAA,KAWVoH,GAAa,eAAAlH,EAAAxC,YAAAC,cAAAC,MAAG,SAAAuC,IAAA,OAAAxC,cAAAY,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElBqI,GAAkBvG,QAAU,IAAI0G,gBAChCC,KAEAnJ,EAASlB,GAA0B,IACnCkB,EAASrB,KACTsD,EAAcnC,EAAQiJ,GAAkBvG,QAAQzC,OAAQC,GAAU,wBAAAQ,EAAAiB,OAAA,GAAAU,EAAA,KACrE,kBARkB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAkCbmH,GAAS,eAAAE,EAAA3J,YAAAC,cAAAC,MAAG,SAAAoD,IAAA,IAAAqC,EAAA,OAAA1F,cAAAY,MAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EACKwF,GAFT,GAE0B,KAAD,EAA7Bb,EAAI3C,EAAAgE,KACVC,QAAQC,IAAI,sBAAwBvB,GACpCkD,EAAYlD,GAAM,wBAAA3C,EAAAjB,OAAA,GAAAuB,EAAA,KACrB,kBAJc,OAAAqG,EAAAtH,MAAA,KAAAC,UAAA,KAef,OATAsH,qBAAU,WACNtJ,EAASzB,EAAsBC,KAC/BsG,GAAkBhF,EAAQA,EAAOc,OAErC,GAAG,IACH0I,qBAAU,WACNxE,GAAkBhF,EAAQA,EAAOc,OACrC,GAAG,CAACd,EAAQtB,GAAWqG,GAAwByD,IAG3CvE,eAAA,OACIP,MAAO,CACHlF,QAAS,OACTiL,cAAe,SACfC,UAAW,SACbxL,SAAA,CAED,IACDC,cAACwL,IAAa,CAAC5C,MAAOA,GAAM7I,SACxBC,cAACyL,IAAM,CACH9F,SAAS,SACT7F,GAAI,CACAyL,UAAW,OACXG,UAAW,OACXlE,gBAAiBoB,GAAME,QAAQE,KAAK5H,WACtCrB,SAEFC,cAAC2L,IAAS,CAACC,SAAS,KAAI7L,SACpB+F,eAAC+F,IAAO,CAACC,gBAAc,EAAA/L,SAAA,CACnBC,cAAC+L,IAAU,CACPjM,GAAI,CACAkM,GAAI,EACJ3L,QAAS,CAAE4L,GAAI,OAAQC,GAAI,QAC3B9L,MAAOwI,GAAME,QAAQE,KAAK7H,QAC1BgL,SAAU,UACZpM,SAEDqJ,EAAE,aAGPpJ,cAACoM,IAAG,CAACtM,GAAI,CAAE+F,MAAO,IAAKL,QAAS,UAAWzF,SACvCC,cAACqM,IAAM,CACH/I,MAAO/C,GACP+L,IAAK,GACLC,KAAM,EACNC,IAAK,IACLpM,MAAM,YACNqM,SA7EX,SAACC,EAAcpJ,GACX,kBAAVA,IACPoH,GAAapH,GACbvB,EAASzB,EAAsBgD,KAEnCvB,EAASpB,GAAa,GAC1B,EAwEgCf,SAAUgH,GACV+F,kBAAkB,OAClB,kBAAgB,wBAGxB7G,eAACsG,IAAG,CACAtM,GAAI,CACA8M,SAAU,EACVvM,QAAS,CAAE4L,GAAI,OAAQC,GAAI,SAC7BnM,SAAA,CAEFC,cAACR,EAAY,CACTE,GAAG,aACHE,UAAWgH,GACX/G,QApFL,WACT,IAADgN,EAAThD,IACyB,QAAzBgD,EAAA/B,GAAkBvG,eAAO,IAAAsI,GAAzBA,EAA2BC,QAC3BhD,GAAW,IAEf/H,EAASrB,IACb,EA8E4DX,SAE3BqJ,EAAE,kBAEPpJ,cAACR,EAAY,CACTE,GAAG,gBACHE,SAAUgH,GACV/G,QA9HH,WACzBkC,EAASpB,GAAa,IACtBoB,EAASlB,GAA0B,IACnCkB,EAASzB,EAAsBC,IACnC,EA0H8DR,SAE7BqJ,EAAE,oBAEPpJ,cAACR,EAAY,CACTE,GAAG,qBACHE,SAAUgH,GACV/G,QAASmL,GAAWjL,SAEnBqJ,EAAE,iBAEPpJ,cAACR,EAAY,CACTE,GAAG,wBACHE,SAAUgH,GACV/G,QAASsL,GAAcpL,SAEtBqJ,EAAE,oBAePtD,eAAA,OACIP,MAAO,CACHwH,YAAa,EACb1M,QAAS,OACT2M,WAAY,SACZxH,QAAS,SACTyH,aAAc,OAChBlN,SAAA,CAEDqJ,EAAE,cAAc,IACjBpJ,cAACkN,IAAK,CACFC,UAAW,EACXrN,GAAI,CACA0F,QAAS,SACTyH,aAAc,MACdG,WAAY,SACZhN,MAAOc,EAAQC,SACjBpB,SAED6K,QAGT5K,cAACqN,IAAgB,CACbC,QACItN,cAACuN,KAAM,CACH3N,UAAU,EACV4N,SAAUvD,EACVwC,SA7IV,WACtBxC,EACArL,EAAK6O,eAAe,MACjB7O,EAAK6O,eAAe,MAC3BvD,GAAkBD,EACtB,EAyIwC7J,MAAM,cAGdmH,MACI0C,EAAgB,UAAY,cAEhCyD,eAAe,UAEnB1N,cAAC2N,IAAc,CACXhI,SAAS,aACTiI,UAAW,IACXC,iBAAe,EACfC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,gBAOpCnO,cAAA,OAAAD,SACK6G,IACG5G,cAACoM,IAAG,CAACtM,GAAI,CAAE+F,MAAO,QAAS9F,SACvBC,cAACoO,IAAc,CAAChO,MAAM,kBAIlCJ,cAAA,OACIuF,MAAO,CACHG,UAAW,QACb3F,SAEFC,cAAC2G,GAAQ,CACL9E,OAAQA,EACR+E,uBAAwBA,GACxBhG,OAAQA,MAGhBZ,cAAA,OAAAD,SACK6G,IACGd,eAAA,OAAA/F,SAAA,CACIC,cAAC+L,IAAU,CAAAhM,SAAC,kBACZC,cAACqO,IAAc,CAAAtO,SACXC,cAACsO,IAAK,CAAAvO,SACFC,cAACuO,IAAS,CAAAxO,SACLsK,EAASpH,KAAI,SAACuL,EAAMjL,GAAK,OACtBvD,cAACyO,IAAQ,CAAA1O,SACLC,cAAC0O,IAAS,CAAA3O,SAAEyO,EAAKA,QADNjL,EAEJ,eAQvCvD,cAAA,OAAKuF,MAAO,CAAEG,UAAW,QAAS3F,SAC9BC,cAACqF,EAAM,QAIvB,CC1TesJ,OAbf,WACI,OACI3O,cAAC4O,IAAe,CAAChQ,KAAMA,EAAKmB,SACxB+F,eAAA,OAAK+I,UAAU,MAAK9O,SAAA,CAChBC,cAACiJ,GAAS,IACVjJ,cAAA,OAAK6O,UAAU,OAAM9O,SACjBC,cAAC+L,IAAU,UAK/B,E,SCHM+C,GAAsB,CACxBjN,OAAQ,GACRkN,iBAAiB,EACjBpE,eAAe,EACf/J,QAAQ,EACRoO,UAAU,EACVnE,oBAAqB,EACrBoE,iBAAkB,IA0DPC,GAvDK,WAAwC,IAAvC1F,EAAKzF,UAAApB,OAAA,QAAAwM,IAAApL,UAAA,GAAAA,UAAA,GAAG+K,GAAcM,EAAWrL,UAAApB,OAAA,EAAAoB,UAAA,QAAAoL,EAClD,OAAQC,EAAO5O,MACX,IAAK,mBAGD,IAFA,IAAMD,EAAY6O,EAAO3O,QACnBoB,EAAS,GACNwN,EAAU,EAAGA,EAAU9O,EAAW8O,IAAW,CAClD,IAAMC,EAAeC,YACA,IAAhBC,KAAKC,UAAgBC,QAAQ,IAElC7N,EAAOmF,KAAK,CAAE5G,MAAOc,EAAQI,OAAQgC,MAAOgM,GAChD,CACA,OAAApP,wBAAA,GACOsJ,GAAK,IACR3H,SACAkN,iBAAiB,EACjBE,iBAAkBpN,IAE1B,IAAK,uBACD,OAA6B,IAAzBuN,EAAO3O,QAAQK,MAEfZ,wBAAA,GAAYsJ,GAAK,IAAEqB,oBAAqB,IAE5C3K,wBAAA,GACOsJ,GAAK,IACRqB,oBAAqBrB,EAAMqB,oBAAsB,IAEzD,IAAK,mBACD,OAAA3K,wBAAA,GAAYsJ,GAAK,IAAEmB,eAAgBnB,EAAMmB,gBAC7C,IAAK,SACD,IAAM/J,EAASwO,EAAO3O,QACtB,OAAAP,wBAAA,GAAYsJ,GAAK,IAAE5I,OAAQA,IAC/B,IAAK,oBACD,OAAAV,wBAAA,GAAYsJ,GAAK,IAAEmB,eAAe,EAAMqE,UAAU,IAEtD,IAAK,mBACD,OAAA9O,wBAAA,GAAYsJ,GAAK,IAAEwF,UAAU,IACjC,IAAK,sBACD,IAAMW,EAAcP,EAAO3O,QAC3B,OAAAP,wBAAA,GACOsJ,GAAK,IACR3H,OAAQ8N,EACRZ,iBAAiB,IAEzB,IAAK,yBACD,IAAMa,EAAiBR,EAAO3O,QAC9B,OAAAP,wBAAA,GACOsJ,GAAK,IACR3H,OAAQ+N,EACRb,iBAAiB,IAEzB,QACI,OAAOvF,EAEnB,ECtEeqG,GAHDC,aAAe,CACzBC,QAASb,KCGbc,IAASC,OACLjQ,cAACwK,IAAM0F,WAAU,CAAAnQ,SACbC,cAACmQ,IAAQ,CAACN,MAAOA,GAAM9P,SACnBC,cAAC2O,GAAG,QAGZyB,SAASC,eAAe,Q","file":"static/js/main.b8586080.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// don't want to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n    // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n    // learn more: https://github.com/i18next/i18next-http-backend\n    // want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\n    .use(Backend)\n    // detect user language\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    // for all options read: https://www.i18next.com/overview/configuration-options\n    .init({\n        fallbackLng: 'en',\n        debug: true,\n\n        interpolation: {\n            escapeValue: false // not needed for react as it escapes by default\n        },\n        react: {\n            useSuspense: false\n        }\n    });\n\nexport default i18n;\n","import Button from '@mui/material/Button';\n\ninterface CustomButtonProps {\n    id: string;\n    disabled?: boolean;\n    onClick: () => void;\n    sx?: React.CSSProperties;\n    children: React.ReactNode;\n}\n\nconst CustomButton: React.FC<CustomButtonProps> = ({\n    id,\n    disabled = false,\n    onClick,\n    sx,\n    children\n}) => {\n    return (\n        <Button\n            id={id}\n            disabled={disabled}\n            sx={{\n                my: 2,\n                color: 'white',\n                display: 'block',\n                ...sx\n            }}\n            onClick={onClick}\n        >\n            {children}\n        </Button>\n    );\n};\nexport default CustomButton;\n","export const generateNumbersAction = (arraySize: number) => {\n    //console.log('generateNumbers action reached');\n    return {\n        type: 'GENERATE_NUMBERS',\n        payload: arraySize\n    };\n};\nexport const sortInProgressAction = () => {\n    //console.log('sortInProgess action reached');\n    return {\n        type: 'SORT_IN_PROGRESS'\n    };\n};\nexport const sortedAction = (sorted: boolean) => {\n    //console.log('sorted action reached');\n    return {\n        type: 'SORTED',\n        payload: sorted\n    };\n};\nexport const startBubbleSortAction = (result: any, algoStop: any) => {\n    return {\n        type: 'START_BUBBLE_SORT',\n        payload: { result, algoStop }\n    };\n};\n\nexport const stopBubbleSortAction = () => {\n    return {\n        type: 'STOP_BUBBLE_SORT'\n    };\n};\n\nexport const iterationsCompletedAction = (clean: boolean) => {\n    return {\n        type: 'ITERATIONS_COMPLETED',\n        payload: { clean: clean }\n    };\n};\nexport const sortNumbersBubbleAction = (newArray: number[]) => {\n    //console.log('SORT_NUMBERS_BUBBLE action reached');\n\n    return {\n        type: 'SORT_NUMBERS_BUBBLE',\n        payload: newArray\n    };\n};\nexport const sortNumbersInsertionAction = (newArray: number[]) => {\n    //console.log('SORT_NUMBERS_INSERTION action reached');\n\n    return {\n        type: 'SORT_NUMBERS_INSERTION',\n        payload: newArray\n    };\n};\n","export const colours = {\n    primary: '#2A2F4F',\n    secondary: '#f0f0f0',\n    success: '#28a745',\n    accent: '#f9d949',\n    error: '#f45050'\n};\n","import {\n    //algoStopAction,\n    iterationsCompletedAction,\n    sortInProgressAction,\n    sortNumbersBubbleAction,\n    sortNumbersInsertionAction,\n    sortedAction\n} from '../redux/reducers/actions';\nimport { colours } from '../styling/colours';\n\nexport const BubbleSort = async (\n    result: any[],\n    signal: AbortSignal,\n    dispatch: any\n) => {\n    //console.log('started bubble sort');\n    const newArray = [...result];\n    const len = newArray.length;\n\n    for (let i = 0; i < len; i++) {\n        for (let j = 0; j < len - 1; j++) {\n            // Check if the abort signal is triggered\n            if (signal.aborted) {\n                //console.log('Bubble sort aborted');\n                const unsortedArray = newArray.map((item) => {\n                    return { ...item, color: colours.accent };\n                });\n                dispatch(sortNumbersBubbleAction(unsortedArray));\n                return;\n            }\n\n            await timer(1000 / len);\n            if (newArray[j].value > newArray[j + 1].value) {\n                let swap = newArray[j];\n                newArray[j] = newArray[j + 1];\n                newArray[j + 1] = swap;\n\n                // Create a new sorted array with modified colors\n                const sortedArray = newArray.map((item, index) => {\n                    if (index === j || index === j + 1) {\n                        //console.log('item coloring test:' + item.color);\n                        if (item.color === '#f45050') {\n                            return { ...item, color: colours.accent };\n                        } else {\n                            return { ...item, color: colours.error };\n                        }\n                    }\n                    return item;\n                });\n\n                dispatch(sortNumbersBubbleAction(sortedArray));\n                dispatch(iterationsCompletedAction(false));\n            }\n        }\n    }\n    // Set the color of all elements to green to indicate the sorting is complete\n    const sortedArray = newArray.map((item) => {\n        return { ...item, color: colours.success };\n    });\n\n    dispatch(sortNumbersBubbleAction(sortedArray));\n\n    dispatch(sortInProgressAction());\n    dispatch(sortedAction(true));\n    //console.log('ended bubble sort');\n};\n\nexport const InsertionSort = async (\n    array: any[],\n    signal: AbortSignal,\n    dispatch: any\n) => {\n    const newArray = [...array];\n    const len = newArray.length;\n\n    for (let i = 1; i < len; i++) {\n        let current = newArray[i];\n        let j = i - 1;\n\n        while (j >= 0 && newArray[j].value > current.value) {\n            if (signal.aborted) {\n                //console.log('Insertion sort aborted');\n                const unsortedArray = newArray.map((item) => {\n                    return { ...item, color: colours.accent };\n                });\n                dispatch(sortNumbersInsertionAction(unsortedArray));\n                return;\n            }\n            newArray[j + 1] = newArray[j];\n            // Create a new sorted array with modified colors\n            // eslint-disable-next-line no-loop-func\n            const sortedArray = newArray.map((item, index) => {\n                if (index === j || index === j + 1) {\n                    if (item.color === '#f45050') {\n                        return { ...item, color: colours.accent };\n                    } else {\n                        return { ...item, color: colours.error };\n                    }\n                }\n                return item;\n            });\n            dispatch(sortNumbersInsertionAction(sortedArray));\n            dispatch(iterationsCompletedAction(false));\n            await timer(1000 / len);\n            j--;\n        }\n\n        newArray[j + 1] = current;\n\n        // Create a new sorted array with green color for the current element\n        const sortedArray = newArray.map((item, index) => {\n            if (index === j + 1) {\n                return { ...item, color: colours.error };\n            }\n            return item;\n        });\n\n        dispatch(sortNumbersInsertionAction(sortedArray));\n        //dispatch(iterationsCompletedAction(false));\n        //await timer(100);\n    }\n\n    // Set the color of all elements to green to indicate the sorting is complete\n    const sortedArray = newArray.map((item) => {\n        return { ...item, color: colours.success };\n    });\n\n    dispatch(sortNumbersInsertionAction(sortedArray));\n    dispatch(sortInProgressAction());\n    dispatch(sortedAction(true));\n    //console.log('ended insertion sort');\n};\n\n// delay timer function\nasync function timer(ms: number) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","import React from 'react';\n\nconst Footer = () => {\n    const name = 'Asaduzzaman Rahat';\n    const email = 'asaduzzaman.rahat@mail.mcgill.ca';\n    const website = 'https://www.asadrahat.ca';\n\n    return (\n        <footer\n            style={{\n                //backgroundColor: '#f5f5f5',\n                padding: '1rem',\n                textAlign: 'center',\n                marginTop: '2rem',\n                position: 'fixed',\n                bottom: '0',\n                width: '100%'\n            }}\n        >\n            <p>\n                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                    asadrahat.ca\n                </a>\n                <br />\n                Ping me at <a href={`mailto:${email}`}>{email}</a>\n                <br />\n            </p>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart } from 'chart.js';\nimport {\n    BarController,\n    BarElement,\n    CategoryScale,\n    LinearScale,\n    Title,\n    Tooltip\n} from 'chart.js';\nimport { colours } from '../styling/colours';\n\nChart.register(\n    BarController,\n    BarElement,\n    CategoryScale,\n    LinearScale,\n    Title,\n    Tooltip\n);\n\ninterface BarGraphProps {\n    result: { color: string; value: number }[];\n    sortingInProgressState: boolean;\n    sorted: boolean;\n}\n\nconst BarGraph: React.FC<BarGraphProps> = ({\n    result,\n    sortingInProgressState,\n    sorted\n}) => {\n    Chart.register(\n        BarController,\n        BarElement,\n        CategoryScale,\n        LinearScale,\n        Title,\n        Tooltip\n    );\n\n    const GenerateDataGraph = (\n        arrayX: { color: string; value: number }[],\n        arrayY: number\n    ) => {\n        var result: { x: number; y: number }[] = [];\n        for (var i = 0; i < arrayY; i++) {\n            result.push({ x: i, y: arrayX[i].value });\n        }\n        return result;\n    };\n\n    const GenerateDataColourGraph = (\n        arrayX: { color: string; value: number }[],\n        arrayY: number\n    ) => {\n        var result: string[] = [];\n        for (var i = 0; i < arrayY; i++) {\n            result.push(arrayX[i].color);\n        }\n        return result;\n    };\n\n    const data = {\n        labels: GenerateDataGraph(result, result.length).map((item) => item.x),\n        datasets: [\n            {\n                label: 'Numbers',\n                data: GenerateDataGraph(result, result.length),\n                backgroundColor: sortingInProgressState\n                    ? GenerateDataColourGraph(result, result.length)\n                    : sorted\n                    ? GenerateDataColourGraph(result, result.length).map(\n                          (color) =>\n                              color === colours.error\n                                  ? colours.error\n                                  : colours.success\n                      )\n                    : Array(result.length).fill(colours.accent)\n            }\n        ]\n    };\n\n    const options = {\n        plugins: {\n            legend: {\n                display: false\n            }\n        },\n        scales: {\n            x: {\n                grid: {\n                    display: false // Remove x-axis grid lines\n                }\n            },\n            y: {\n                grid: {\n                    display: false // Remove y-axis grid lines\n                }\n            }\n        }\n    };\n\n    return <Bar options={options} data={data} />;\n};\n\nexport default BarGraph;\n","import axios from 'axios';\n\nexport async function fetchData(limit: number): Promise<any> {\n    try {\n        const response = await axios.get(\n            'https://api.api-ninjas.com/v1/facts',\n            {\n                headers: {\n                    'X-Api-Key': 'I4H2nQwOgNmZRaRD9ermhQ==sUCGoy3QWJohzMt9'\n                },\n                params: {\n                    limit: limit\n                }\n            }\n        );\n        console.log('fetched fact data api: ' + response.data);\n\n        return response.data;\n    } catch (error) {\n        console.error('Request failed:', error);\n        throw error;\n    }\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n    AppBar,\n    Box,\n    Toolbar,\n    Typography,\n    Container,\n    Slider,\n    Paper,\n    FormControlLabel,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CustomButton from '../component/Button';\nimport {\n    generateNumbersAction,\n    sortInProgressAction,\n    iterationsCompletedAction,\n    sortedAction\n} from '../redux/reducers/actions';\nimport { BubbleSort, InsertionSort } from '../component/Algorithms';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nimport Footer from '../component/Footer';\nimport BarGraph from '../component/BarGraph';\nimport Switch, { SwitchProps } from '@mui/material/Switch';\nimport { colours } from '../styling/colours';\nimport { fetchData } from '../api/factApi';\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: colours.primary\n        },\n        secondary: {\n            main: colours.secondary\n        },\n        text: {\n            primary: colours.accent,\n            secondary: colours.primary\n        }\n    }\n});\ninterface Fact {\n    fact: string;\n}\nexport default function Dashboard(): JSX.Element {\n    const { t, i18n } = useTranslation();\n    const dispatch = useDispatch();\n    const { result, sorted } = useSelector((state: any) => state);\n    const [running, setRunning] = useState(false);\n    const [languageValue, setLanguageValue] = useState(true);\n    const [factData, setFactData] = useState<Fact[]>([]);\n\n    const [arraySize, setArraySize] = React.useState<number>(10);\n    const sortingInProgressState = useSelector(\n        (state: any) => state.sortInProgess\n    );\n    const iterationsCompletedState = useSelector(\n        (state: any) => state.iterationsCompleted\n    );\n    const stopControllerRef = useRef<AbortController | null>(null);\n    const GenerateDataGraph = (\n        arrayX: { color: string; value: number }[],\n        arrayY: number\n    ): { x: number; y: number }[] => {\n        var result: { x: number; y: number }[] = [];\n        for (var i = 0; i < arrayY; i++) {\n            result.push({ x: i, y: arrayX[i].value });\n        }\n        return result;\n    };\n\n    const RemoveNumberFunction = () => {\n        dispatch(sortedAction(false));\n        dispatch(iterationsCompletedAction(true));\n        dispatch(generateNumbersAction(arraySize));\n    };\n\n    const bubbleSort = async () => {\n        setRunning(true);\n        stopControllerRef.current = new AbortController();\n\n        //console.log('started bubble sort');\n        callFacts();\n        dispatch(iterationsCompletedAction(true));\n        dispatch(sortInProgressAction());\n        await BubbleSort(result, stopControllerRef.current.signal, dispatch);\n    };\n\n    const insertionSort = async () => {\n        //console.log('started Insertion sort');\n        stopControllerRef.current = new AbortController();\n        callFacts();\n\n        dispatch(iterationsCompletedAction(true));\n        dispatch(sortInProgressAction());\n        InsertionSort(result, stopControllerRef.current.signal, dispatch);\n    };\n\n    const handleChange = (event: Event, value: number | number[]) => {\n        if (typeof value === 'number') {\n            setArraySize(value);\n            dispatch(generateNumbersAction(value)); // Update the array size in the Redux state\n        }\n        dispatch(sortedAction(false));\n    };\n\n    const stopSortingHandler = () => {\n        if (running) {\n            stopControllerRef.current?.abort();\n            setRunning(false);\n        }\n        dispatch(sortInProgressAction());\n    };\n\n    const changeLanguageHandler = () => {\n        if (languageValue) {\n            i18n.changeLanguage('fr');\n        } else i18n.changeLanguage('en');\n        setLanguageValue(!languageValue);\n    };\n    // generate random facts\n    const limit = 3;\n    const callFacts = async () => {\n        const data = await fetchData(limit);\n        console.log('fetched fact data: ' + data);\n        setFactData(data);\n    };\n\n    useEffect(() => {\n        dispatch(generateNumbersAction(arraySize));\n        GenerateDataGraph(result, result.length);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    useEffect(() => {\n        GenerateDataGraph(result, result.length);\n    }, [result, arraySize, sortingInProgressState, factData]);\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexDirection: 'column',\n                minHeight: '100vh'\n            }}\n        >\n            {' '}\n            <ThemeProvider theme={theme}>\n                <AppBar\n                    position=\"static\"\n                    sx={{\n                        minHeight: '4rem',\n                        maxHeight: '6rem',\n                        backgroundColor: theme.palette.text.secondary\n                    }}\n                >\n                    <Container maxWidth=\"xl\">\n                        <Toolbar disableGutters>\n                            <Typography\n                                sx={{\n                                    mr: 3,\n                                    display: { xs: 'flex', md: 'flex' },\n                                    color: theme.palette.text.primary,\n                                    fontSize: '1.5rem'\n                                }}\n                            >\n                                {t(`AlgoViz`)}\n                            </Typography>\n\n                            <Box sx={{ width: 100, padding: '0.4rem' }}>\n                                <Slider\n                                    value={arraySize}\n                                    min={10}\n                                    step={1}\n                                    max={100}\n                                    color=\"secondary\"\n                                    onChange={handleChange}\n                                    disabled={sortingInProgressState}\n                                    valueLabelDisplay=\"auto\"\n                                    aria-labelledby=\"non-linear-slider\"\n                                />\n                            </Box>\n                            <Box\n                                sx={{\n                                    flexGrow: 1,\n                                    display: { xs: 'flex', md: 'flex' }\n                                }}\n                            >\n                                <CustomButton\n                                    id=\"algoStopID\"\n                                    disabled={!sortingInProgressState}\n                                    onClick={stopSortingHandler}\n                                >\n                                    {t('Stop Sorting')}\n                                </CustomButton>\n                                <CustomButton\n                                    id=\"clearNumberID\"\n                                    disabled={sortingInProgressState}\n                                    onClick={RemoveNumberFunction}\n                                >\n                                    {t('Remove Numbers')}\n                                </CustomButton>\n                                <CustomButton\n                                    id=\"bubble-sort-button\"\n                                    disabled={sortingInProgressState}\n                                    onClick={bubbleSort}\n                                >\n                                    {t('Bubble sort')}\n                                </CustomButton>\n                                <CustomButton\n                                    id=\"Insertion-sort-button\"\n                                    disabled={sortingInProgressState}\n                                    onClick={insertionSort}\n                                >\n                                    {t('Insertion sort')}\n                                </CustomButton>\n                                {/* <CustomButton\n                                    id=\"FR-language-button\"\n                                    onClick={() => changeLanguageHandler('fr')}\n                                >\n                                    Fr\n                                </CustomButton>\n                                <CustomButton\n                                    id=\"EN-language-button\"\n                                    onClick={() => changeLanguageHandler('en')}\n                                >\n                                    En\n                                </CustomButton> */}\n\n                                <div\n                                    style={{\n                                        marginRight: 3,\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        padding: '0.5rem',\n                                        borderRadius: '4px'\n                                    }}\n                                >\n                                    {t(`Iterations`)}:\n                                    <Paper\n                                        elevation={3}\n                                        sx={{\n                                            padding: '0.5rem',\n                                            borderRadius: '4px',\n                                            marginLeft: '0.5rem',\n                                            color: colours.primary\n                                        }}\n                                    >\n                                        {iterationsCompletedState}\n                                    </Paper>\n                                </div>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            disabled={true}\n                                            checked={!languageValue}\n                                            onChange={changeLanguageHandler}\n                                            color=\"secondary\"\n                                        />\n                                    }\n                                    label={\n                                        languageValue ? 'English' : 'Français'\n                                    }\n                                    labelPlacement=\"start\"\n                                />\n                                <ToastContainer\n                                    position=\"top-center\"\n                                    autoClose={2000}\n                                    hideProgressBar\n                                    newestOnTop={false}\n                                    closeOnClick\n                                    rtl={false}\n                                    pauseOnFocusLoss\n                                    draggable\n                                    pauseOnHover\n                                />\n                            </Box>\n                        </Toolbar>\n                    </Container>\n                </AppBar>\n            </ThemeProvider>\n            <div>\n                {sortingInProgressState && (\n                    <Box sx={{ width: '100%' }}>\n                        <LinearProgress color=\"secondary\" />\n                    </Box>\n                )}\n            </div>\n            <div\n                style={{\n                    marginTop: '2rem'\n                }}\n            >\n                <BarGraph\n                    result={result}\n                    sortingInProgressState={sortingInProgressState}\n                    sorted={sorted}\n                />\n            </div>\n            <div>\n                {sortingInProgressState && (\n                    <div>\n                        <Typography>Random facts:</Typography>\n                        <TableContainer>\n                            <Table>\n                                <TableBody>\n                                    {factData.map((fact, index) => (\n                                        <TableRow key={index}>\n                                            <TableCell>{fact.fact}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </div>\n                )}\n            </div>\n            <div style={{ marginTop: 'auto' }}>\n                <Footer />\n            </div>\n        </div>\n    );\n}\n","import { Typography } from '@mui/material';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './i18n';\nimport Dashboard from './page/MainPage';\n\nfunction App() {\n    return (\n        <I18nextProvider i18n={i18n}>\n            <div className=\"App\">\n                <Dashboard />\n                <div className=\"Body\">\n                    <Typography></Typography>\n                </div>\n            </div>\n        </I18nextProvider>\n    );\n}\n\nexport default App;\n","//import { bubbleSort } from '../../component/Algorithms';\nimport { colours } from '../../styling/colours';\n\ninterface State {\n    result: { color: string; value: number }[];\n    displayComplete: boolean;\n    sortInProgess: boolean;\n    sorted: boolean;\n    algoStop: boolean;\n    iterationsCompleted: number;\n    generatedNumbers: { color: string; value: number }[];\n}\n\nconst initialState: State = {\n    result: [],\n    displayComplete: true,\n    sortInProgess: false,\n    sorted: false,\n    algoStop: false,\n    iterationsCompleted: 0,\n    generatedNumbers: []\n};\n\nconst rootReducer = (state = initialState, action: any) => {\n    switch (action.type) {\n        case 'GENERATE_NUMBERS':\n            const arraySize = action.payload;\n            const result = [];\n            for (let counter = 0; counter < arraySize; counter++) {\n                const randomNumber = parseFloat(\n                    (Math.random() * 100).toFixed(0)\n                );\n                result.push({ color: colours.accent, value: randomNumber });\n            }\n            return {\n                ...state,\n                result,\n                displayComplete: true,\n                generatedNumbers: result\n            };\n        case 'ITERATIONS_COMPLETED':\n            if (action.payload.clean === true) {\n                //console.log('ITERATIONS_COMPLETED payload: clean');\n                return { ...state, iterationsCompleted: 0 };\n            }\n            return {\n                ...state,\n                iterationsCompleted: state.iterationsCompleted + 1\n            };\n        case 'SORT_IN_PROGRESS':\n            return { ...state, sortInProgess: !state.sortInProgess };\n        case 'SORTED':\n            const sorted = action.payload;\n            return { ...state, sorted: sorted };\n        case 'START_BUBBLE_SORT':\n            return { ...state, sortInProgess: true, algoStop: false };\n\n        case 'STOP_BUBBLE_SORT':\n            return { ...state, algoStop: true };\n        case 'SORT_NUMBERS_BUBBLE':\n            const arrayBubble = action.payload;\n            return {\n                ...state,\n                result: arrayBubble,\n                displayComplete: true\n            };\n        case 'SORT_NUMBERS_INSERTION':\n            const arrayInsertion = action.payload;\n            return {\n                ...state,\n                result: arrayInsertion,\n                displayComplete: true\n            };\n        default:\n            return state;\n    }\n};\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\n\nconst store = configureStore({\n    reducer: rootReducer\n});\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './i18n';\nimport { Provider } from 'react-redux';\nimport store from './redux/reducers/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(//console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}